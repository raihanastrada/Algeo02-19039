procedure Dequeue (input/output Q:Queue, output X: infotype)
Kamus
i : address
Algoritma
    X <-- Q.T[Q.HEAD]
    if(NBElmt=1)then
        Q.HEAD <-- Nil
        Q.TAIL <-- Nil
    else
        i traversal[Q.HEAD..Q.TAIL-1]
            Q.T[i]<--Q.T[i+1]
        {end for}
        Q.TAIL <-- Q.TAIL-1
    {end if}
{end procedure}

procedure Split (input Q:Queue,input ratio: real, output Q1, Q2:Queue)
Kamus
iter: address
NQ1,NQ2: integer
Algoritma
    NQ1 <-- ceiling(NBElmt(Q) * ratio)
    NQ2 <-- NBElmt(Q)-NQ1
    iter <-- Q.HEAD
    CreateEmpty(Q1, NQ1)
    CreateEmpty(Q2,NQ1)
    while NQ1 > 0 and NQ2 > 0 do
        Enqueue(Q1, Q.T[iter])
        iter<--iter+1
        Enqueue(Q2, Q.T[iter])
        iter<--iter+1
        NQ1<-- NQ1-1
        NQ2<-- NQ2-1
    {end while}
    //pengecekan apakah masih ada yang belum displit
    while NQ1 > 0 do
        Enqueue(Q1, Q.T[iter])
        iter<--iter+1
        NQ1<-- NQ1-1
    {end while}
    while NQ2>0 do
        Enqueue(Q2, Q.T[iter])
        iter<--iter+1
        NQ2<-- NQ2-1
    {end while}
{end procedure}