procedure STARTTOKEN
Kamus
Algoritma
    START
    IgnoreBlank
    if(CC=MARK) then
        EndToken = true
    else
        EndToken = flase
        SalinToken
    {end if}
{end procedure}

procedure SalinToken
Kamus
Copr : string
Cval,i : integer
Algoritma
    i<--0
    while CC!='-' do
        Copr[i]<--CC
        i<--i+1
        ADV
    {end while}
    ADV
    Cval <-- 0
    while CC!=MARK and CC!=BLANK do
        Cval <-- Cval * 10
        Cval <-- Cval + KarakterToInteger(CC)
        ADV
    {end while}
    IgnoreBlank
    CToken.opr <--Copr
    CToken.val <-- Cval
{end procedure}

Program TransaksiATM
use MESINTOKEN
use ADTStack
Kamus
S : Stack
full : boolean
total, X : integer
Algoritma
    CreateEmpty(S)
    full <-- false
    STARTTOKEN
    while not EndToken and not full do
        if(IsFull(S))then
            full<-- true
        else
            if(CToken.opr = "tarik") then
                Push(S, -1 * CToken.val)
            else
                Push(S, CToken.val)
            {end if}
        {end if}
        ADVTOKEN
    {end while}
    if(IsEmpty(S)) then
        output("tidak ada transaksi")
    else if(full) then
        output("Stack penuh")
    else
        total <-- 0
        while not IsEmpty(S) do
            Pop(S,X)
            total<-- total + X
        {end while}
        output(total)
    {end if}
{end program}
